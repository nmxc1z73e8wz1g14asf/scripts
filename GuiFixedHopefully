local Players = game:GetService("Players")
local player = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

-- Remove old GUI
local CoreGui = game:GetService("CoreGui")
local existingGui = CoreGui:FindFirstChild("DeltaExecutorGUI")
if existingGui then existingGui:Destroy() end

-- Helper for rounded corners
local function createUICorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 15)
    corner.Parent = parent
    return corner
end

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DeltaExecutorGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = CoreGui

-- Main frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 360, 0, 400)
mainFrame.Position = UDim2.new(0.5, -180, 0.5, -200)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
createUICorner(mainFrame, 15)

-- UIStroke for border
local stroke = Instance.new("UIStroke")
stroke.Thickness = 2
stroke.Color = Color3.fromRGB(60, 60, 60)
stroke.Parent = mainFrame

-- Title bar for dragging
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame
createUICorner(titleBar, 15)

local titleLabel = Instance.new("TextLabel")
titleLabel.Text = "Delta Executor"
titleLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
titleLabel.BackgroundTransparency = 1
titleLabel.Size = UDim2.new(1, 0, 1, 0)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20
titleLabel.Parent = titleBar

-- Close button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 25)
closeBtn.Position = UDim2.new(1, -40, 0, 7)
closeBtn.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
closeBtn.BorderSizePixel = 0
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.Parent = titleBar
createUICorner(closeBtn, 8)

closeBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Drag functionality
local dragging, dragInput, dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

-- Tab buttons container
local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(1, 0, 0, 40)
tabsFrame.Position = UDim2.new(0, 0, 0, 40)
tabsFrame.BackgroundTransparency = 1
tabsFrame.Parent = mainFrame

local function createTabButton(name, position)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 180, 1, 0)
    btn.Position = UDim2.new(0, position, 0, 0)
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    btn.BorderSizePixel = 0
    btn.Text = name
    btn.TextColor3 = Color3.fromRGB(220, 220, 220)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 18
    btn.Parent = tabsFrame
    createUICorner(btn, 10)
    return btn
end

local charTabBtn = createTabButton("Character", 0)
local tpTabBtn = createTabButton("Teleports", 180)

-- Content containers
local charContent = Instance.new("Frame")
charContent.Size = UDim2.new(1, -20, 1, -90)
charContent.Position = UDim2.new(0, 10, 0, 85)
charContent.BackgroundTransparency = 1
charContent.Parent = mainFrame

local tpContent = Instance.new("Frame")
tpContent.Size = UDim2.new(1, -20, 1, -90)
tpContent.Position = UDim2.new(0, 10, 0, 85)
tpContent.BackgroundTransparency = 1
tpContent.Visible = false
tpContent.Parent = mainFrame

-- Button creator helper
local function createButton(parent, text)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 40)
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    btn.BorderSizePixel = 0
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(230, 230, 230)
    btn.Font = Enum.Font.GothamSemibold
    btn.TextSize = 18
    btn.AutoButtonColor = true
    btn.Parent = parent
    createUICorner(btn, 10)
    return btn
end

-- Tab switching logic
local function switchToChar()
    charContent.Visible = true
    tpContent.Visible = false
    charTabBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    tpTabBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
end

local function switchToTP()
    charContent.Visible = false
    tpContent.Visible = true
    tpTabBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    charTabBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
end

charTabBtn.MouseButton1Click:Connect(switchToChar)
tpTabBtn.MouseButton1Click:Connect(switchToTP)

switchToChar() -- default tab

-- Character scripts UI

local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Store state toggles and connections
local godmodeEnabled = false
local speedEnabled = false
local highjumpEnabled = false
local invisibilityEnabled = false
local connections = {}

local function clearConnections()
    for _, conn in pairs(connections) do
        if conn.Connected then
            conn:Disconnect()
        end
    end
    connections = {}
end

local function setCharacterTransparency(transparency)
    if not player.Character then return end
    for _, part in pairs(player.Character:GetChildren()) do
        if part:IsA("BasePart") or part:IsA("Decal") then
            part.Transparency = transparency
        elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
            part.Handle.Transparency = transparency
        end
    end
end

-- Godmode Button
local godBtn = createButton(charContent, "Godmode")
godBtn.MouseButton1Click:Connect(function()
    godmodeEnabled = not godmodeEnabled
    if godmodeEnabled then
        godBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
        local conn = humanoid.HealthChanged:Connect(function(health)
            if godmodeEnabled and humanoid.Health < humanoid.MaxHealth then
                humanoid.Health = humanoid.MaxHealth
            end
        end)
        table.insert(connections, conn)
    else
        godBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        humanoid.MaxHealth = 100
        humanoid.Health = 100
        clearConnections()
    end
end)

-- Speed Button
local speedBtn = createButton(charContent, "Speed")
speedBtn.MouseButton1Click:Connect(function()
    speedEnabled = not speedEnabled
    if speedEnabled then
        speedBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
        humanoid.WalkSpeed = 50
    else
        speedBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        humanoid.WalkSpeed = 16
    end
end)

-- HighJump Button
local highjumpBtn = createButton(charContent, "HighJump")
highjumpBtn.MouseButton1Click:Connect(function()
    highjumpEnabled = not highjumpEnabled
    if highjumpEnabled then
        highjumpBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
        humanoid.JumpPower = 100
    else
        highjumpBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        humanoid.JumpPower = 50
    end
end)

-- Invisibility Button
local invisBtn = createButton(charContent, "Invisibility")
invisBtn.MouseButton1Click:Connect(function()
    invisibilityEnabled = not invisibilityEnabled
    if invisibilityEnabled then
        invisBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
        setCharacterTransparency(1)
    else
        invisBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        setCharacterTransparency(0)
    end
end)

-- Reset character scripts on respawn
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = char:WaitForChild("Humanoid")

    godmodeEnabled = false
    speedEnabled = false
    highjumpEnabled = false
    invisibilityEnabled = false
    clearConnections()

    godBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    speedBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    highjumpBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    invisBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

    humanoid.MaxHealth = 100
    humanoid.Health = 100
    humanoid.WalkSpeed = 16
    humanoid.JumpPower = 50
    setCharacterTransparency(0)
end)

-- Teleports UI
local teleports = {
    {name = "Legend Island", pos = Vector3.new(4524, 1001, -3842)},
    {name = "Jungle Island", pos = Vector3.new(-8393, 53, 2402)},
    {name = "Magma Island", pos = Vector3.new(-6813, 35, -1279)},
}

for _, tp in ipairs(teleports) do
    local tpBtn = createButton(tpContent, tp.name)
    tpBtn.MouseButton1Click:Connect(function()
        local char = player.Character or player.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")
        hrp.CFrame = CFrame.new(tp.pos)
    end)
end

return screenGui
