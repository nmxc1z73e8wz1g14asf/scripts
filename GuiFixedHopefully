-- // Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- // Wait for character and humanoid
local function getHumanoid()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")
    return humanoid
end

local humanoid = getHumanoid()

-- // Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedJumpGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = game.CoreGui

-- // Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 320, 0, 180)
mainFrame.Position = UDim2.new(0, 20, 0, 60)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.AnchorPoint = Vector2.new(0, 0)
mainFrame.Parent = screenGui
mainFrame.ClipsDescendants = true
mainFrame.Visible = true
mainFrame.BackgroundTransparency = 0.1
mainFrame.ZIndex = 10
mainFrame.LayoutOrder = 1

-- // UI Corner for round edges
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = mainFrame

-- // Title Label
local title = Instance.new("TextLabel")
title.Text = "Speed & Jump Controller"
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(220, 220, 220)
title.Font = Enum.Font.GothamSemibold
title.TextSize = 18
title.Parent = mainFrame

-- // Function to create slider
local function createSlider(name, min, max, default)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -40, 0, 50)
    container.Position = UDim2.new(0, 20, 0, 40)
    container.BackgroundTransparency = 1
    container.Parent = mainFrame

    local label = Instance.new("TextLabel")
    label.Text = name
    label.Font = Enum.Font.GothamSemibold
    label.TextSize = 14
    label.TextColor3 = Color3.fromRGB(200, 200, 200)
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Size = UDim2.new(0.5, 0, 0, 20)
    label.Parent = container

    local valueLabel = Instance.new("TextLabel")
    valueLabel.Text = tostring(default)
    valueLabel.Font = Enum.Font.GothamSemibold
    valueLabel.TextSize = 14
    valueLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
    valueLabel.BackgroundTransparency = 1
    valueLabel.Position = UDim2.new(0.5, 0, 0, 0)
    valueLabel.Size = UDim2.new(0.5, 0, 0, 20)
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.Parent = container

    local sliderBack = Instance.new("Frame")
    sliderBack.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderBack.Size = UDim2.new(1, 0, 0, 10)
    sliderBack.Position = UDim2.new(0, 0, 0, 30)
    sliderBack.Parent = container
    sliderBack.ClipsDescendants = true
    sliderBack.AnchorPoint = Vector2.new(0, 0)

    local uiCornerBack = Instance.new("UICorner")
    uiCornerBack.CornerRadius = UDim.new(0, 4)
    uiCornerBack.Parent = sliderBack

    local sliderFill = Instance.new("Frame")
    sliderFill.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
    sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    sliderFill.Parent = sliderBack

    local uiCornerFill = Instance.new("UICorner")
    uiCornerFill.CornerRadius = UDim.new(0, 4)
    uiCornerFill.Parent = sliderFill

    local dragging = false

    sliderBack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    sliderBack.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mousePos = UserInputService:GetMouseLocation()
            local relativeX = math.clamp(mousePos.X - sliderBack.AbsolutePosition.X, 0, sliderBack.AbsoluteSize.X)
            local percent = relativeX / sliderBack.AbsoluteSize.X
            sliderFill.Size = UDim2.new(percent, 0, 1, 0)

            local value = math.floor(min + (max - min) * percent)
            valueLabel.Text = tostring(value)
            -- Return value for hooking later
            container.Value = value
        end
    end)

    container.Value = default
    return container
end

-- // Create sliders
local speedSlider = createSlider("Speed", 16, 250, 16)
speedSlider.Position = UDim2.new(0, 20, 0, 40)

local jumpSlider = createSlider("Jump Height", 50, 200, 50)
jumpSlider.Position = UDim2.new(0, 20, 0, 100)

speedSlider.Parent = mainFrame
jumpSlider.Parent = mainFrame

-- // Update humanoid properties every frame
game:GetService("RunService").RenderStepped:Connect(function()
    if humanoid and humanoid.Parent then
        humanoid.WalkSpeed = speedSlider.Value
        humanoid.JumpPower = jumpSlider.Value
    else
        humanoid = getHumanoid()
    end
end)

-- // Toggle GUI visibility with a button (top-right)
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 30, 0, 30)
toggleButton.Position = UDim2.new(1, -35, 0, 5)
toggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
toggleButton.Text = "â‰¡"
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 20
toggleButton.TextColor3 = Color3.fromRGB(180, 180, 180)
toggleButton.AutoButtonColor = false
toggleButton.Parent = mainFrame
toggleButton.AnchorPoint = Vector2.new(1, 0)
local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 5)
toggleCorner.Parent = toggleButton

toggleButton.MouseEnter:Connect(function()
    toggleButton.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
end)
toggleButton.MouseLeave:Connect(function()
    toggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
end)

toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)
